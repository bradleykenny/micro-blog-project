{"version":3,"sources":["components/Card.tsx","components/CardList.tsx","components/Home.tsx","components/Login.tsx","components/PostCard.tsx","components/Nav.tsx","components/Register.tsx","components/Profile.tsx","components/PostDetail.tsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","curUser","JSON","parse","localStorage","getItem","useState","likes","includes","username","liked","setLiked","history","useHistory","ts","Date","timestamp","formatDate","dateformat","href","alt","src","avatar","className","dangerouslySetInnerHTML","__html","text","token","onClick","config","headers","Authorization","axios","post","id","user","then","res","push","CardList","cards","setCards","postsCount","setPostsCount","useEffect","get","response","data","forEach","temp","follows","map","c","key","content","Button","style","marginBottom","Home","Container","paddingTop","Row","Col","xs","length","Login","setUsername","password","setPassword","error","setError","setUser","to","onSubmit","e","preventDefault","setItem","stringify","catch","status","Alert","variant","Group","controlId","Label","Control","type","placeholder","onChange","target","value","block","Link","PostCard","setContent","showForm","setShowForm","handleShowHide","Body","size","float","marginTop","Form","alert","name","NavBar","Nav","activeKey","Item","eventKey","removeItem","Register","password2","setPassword2","response2","err","console","log","Profile","_id","__v","following","useParams","Jumbotron","fluid","PostDetail","setPost","App","localUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.28012494.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport dateformat from \"dateformat\";\nimport BCard from \"react-bootstrap/Card\";\nimport { useHistory } from \"react-router\";\n\nimport \"../style/Card.css\";\nimport { JWT } from \"../types/JWT\";\nimport axios from \"axios\";\n\ntype CardProps = {\n\tusername: string;\n\ttext: string;\n\tlikes: string[];\n\tavatar: string;\n\ttimestamp: string;\n\tid: string;\n};\n\nexport const Card = (props: CardProps) => {\n\tconst curUser: JWT = JSON.parse(localStorage.getItem(\"user\") || \"{}\");\n\tconst [liked, setLiked] = useState(\n\t\tprops.likes.includes(curUser.username) ? true : false\n\t);\n\tconst history = useHistory();\n\n\tconst handleLiked = () => {\n\t\tconst config = {\n\t\t\theaders: { Authorization: \"Bearer \" + curUser.token },\n\t\t};\n\t\taxios\n\t\t\t.post(\n\t\t\t\t\"/api/posts/\" + props.id + \"/like\",\n\t\t\t\t{\n\t\t\t\t\tuser: props.username,\n\t\t\t\t},\n\t\t\t\tconfig\n\t\t\t)\n\t\t\t.then((res) => {\n\t\t\t\tsetLiked(!liked);\n\t\t\t});\n\t};\n\n\tconst handleMore = () => {\n\t\thistory.push(\"/post/\" + props.id);\n\t};\n\n\tconst ts: number = Date.parse(props.timestamp);\n\tconst formatDate: string = dateformat(ts, \"h:MMtt | dS mmm yyyy\");\n\n\treturn (\n\t\t<BCard>\n\t\t\t<a href={\"/profile/\" + props.username}>\n\t\t\t\t<img alt=\"Avatar\" src={props.avatar} />\n\t\t\t</a>\n\t\t\t<div className=\"card_text\">\n\t\t\t\t<a href={\"/profile/\" + props.username}>\n\t\t\t\t\t<h2>@{props.username}</h2>\n\t\t\t\t</a>\n\t\t\t\t<p dangerouslySetInnerHTML={{ __html: props.text }}></p>\n\t\t\t\t<ul>\n\t\t\t\t\t{curUser.token && (\n\t\t\t\t\t\t<p onClick={handleLiked}>{liked ? \"Unlike\" : \"Like\"}</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<p onClick={handleMore}>More</p>\n\t\t\t\t</ul>\n\t\t\t\t<h6>{formatDate}</h6>\n\t\t\t</div>\n\t\t</BCard>\n\t);\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"./\";\nimport { Button } from \"react-bootstrap\";\n\ntype CardListProps = {};\n\nexport const CardList = (props: CardListProps) => {\n\tconst [cards, setCards] = useState([]);\n\tconst [postsCount, setPostsCount] = useState(10);\n\n\tuseEffect(() => {\n\t\taxios.get(\"/api/posts/\" + postsCount).then((response) => {\n\t\t\tsetCards(response.data);\n\t\t\tresponse.data.forEach((post: any) => {\n\t\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\t\tpost.user = temp;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}, []);\n\n\tconst handleLoad = () => {\n\t\taxios.get(\"/api/posts/\" + (postsCount + 10)).then((response) => {\n\t\t\tsetCards(response.data);\n\t\t\tsetPostsCount(postsCount + 10);\n\t\t\tresponse.data.forEach((post: any) => {\n\t\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\t\tpost.user = temp;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{cards.map((c: any) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={c.id}\n\t\t\t\t\t\tid={c.id}\n\t\t\t\t\t\tusername={c.user}\n\t\t\t\t\t\ttext={c.content}\n\t\t\t\t\t\tlikes={c.likes}\n\t\t\t\t\t\tavatar={c.avatar}\n\t\t\t\t\t\ttimestamp={c.timestamp}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Button onClick={handleLoad} style={{ marginBottom: \"15px\" }}>\n\t\t\t\tLoad More\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n","import React from \"react\";\nimport BCard from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { CardList, PostCard } from \"./\";\nimport { JWT } from \"../types/JWT\";\n\ntype HomeProps = {\n\tuser: JWT;\n};\n\nexport const Home = (props: HomeProps) => {\n\treturn (\n\t\t<div>\n\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={4}>\n\t\t\t\t\t\t{props.user && (\n\t\t\t\t\t\t\t<BCard>\n\t\t\t\t\t\t\t\t<a href={\"/profile/\" + props.user.username}>\n\t\t\t\t\t\t\t\t\t<img src={props.user.avatar} alt=\"Avatar\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<div className=\"card_text\">\n\t\t\t\t\t\t\t\t\t<a href={\"/profile/\" + props.user.username}>\n\t\t\t\t\t\t\t\t\t\t<h2>@{props.user.username}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<i>Some information here coming soon</i>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tFollowers: {props.user.follows.length}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tFollowing: {props.user.follows.length}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</BCard>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6}>\n\t\t\t\t\t\t{props.user && <PostCard user={props.user} />}\n\t\t\t\t\t\t<CardList />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col />\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport BCard from \"react-bootstrap/Card\";\nimport BForm from \"react-bootstrap/Form\";\nimport BButton from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { JWT } from \"../types/JWT\";\n\nimport \"../style/Card.css\";\nimport \"../style/Login.css\";\nimport { useHistory } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\ntype LoginProps = {\n\tuser: JWT;\n\tsetUser: Function;\n};\n\nexport const Login = (props: LoginProps) => {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [error, setError] = useState(false);\n\tconst history = useHistory();\n\n\tconst { user, setUser } = props;\n\n\tconst handleLogin = (e: any) => {\n\t\te.preventDefault();\n\t\taxios\n\t\t\t.post(\"/api/login\", { username, password })\n\t\t\t.then((response) => {\n\t\t\t\tsetUser(response.data);\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t\t\t\thistory.push(\"/home\");\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tif (error.response.status === 401) {\n\t\t\t\t\tsetError(true);\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tif (user) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col></Col>\n\t\t\t\t<Col xs={6}>\n\t\t\t\t\t<BCard>\n\t\t\t\t\t\t<BForm onSubmit={handleLogin}>\n\t\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t\t<Alert variant=\"danger\">\n\t\t\t\t\t\t\t\t\tUsername and/or password incorrect.\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t\t<BForm.Label>Username</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter username\"\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BButton variant=\"primary\" type=\"submit\" block>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</BButton>\n\t\t\t\t\t\t</BForm>\n\t\t\t\t\t\t<BCard.Link href=\"/register\" className=\"registerLink\">\n\t\t\t\t\t\t\tDon't have an account?\n\t\t\t\t\t\t</BCard.Link>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Col>\n\t\t\t\t<Col></Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n\tCard as BCard,\n\tContainer,\n\tRow,\n\tCol,\n\tForm,\n\tButton,\n} from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { JWT } from \"../types/JWT\";\n\ntype PostCardProps = {\n\tuser: JWT;\n};\n\nexport const PostCard = (props: PostCardProps) => {\n\tconst [content, setContent] = useState(\"\");\n\tconst [showForm, setShowForm] = useState(false);\n\tconst history = useHistory();\n\n\tconst handleSubmit = (e: any) => {\n\t\te.preventDefault();\n\t\tif (content.length > 0) {\n\t\t\tconst config = {\n\t\t\t\theaders: { Authorization: \"Bearer \" + props.user.token },\n\t\t\t};\n\t\t\taxios\n\t\t\t\t.post(\n\t\t\t\t\t\"/api/posts/create\",\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t},\n\t\t\t\t\tconfig\n\t\t\t\t)\n\t\t\t\t.then((res) => {\n\t\t\t\t\talert(\"Content posted!\");\n\t\t\t\t\thistory.push(\"/\");\n\t\t\t\t\tsetContent(\"\");\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleChange = (e: any) => {\n\t\te.preventDefault();\n\t\tconst { name, value } = e.target;\n\n\t\tswitch (name) {\n\t\t\tcase \"content\":\n\t\t\t\tsetContent(value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleShowHide = () => {\n\t\tsetShowForm(!showForm);\n\t};\n\n\tif (props.user) {\n\t\tif (showForm) {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Row className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t<Col className=\"align-items-center\">\n\t\t\t\t\t\t\t<BCard>\n\t\t\t\t\t\t\t\t<BCard.Body>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"-5px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={handleShowHide}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tHide\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{/* <BCard.Title className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<h1>Create post</h1>\n\t\t\t\t\t\t\t\t\t</BCard.Title> */}\n\t\t\t\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formUsername\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\tWhat do you want to say?\n\t\t\t\t\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Content\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={content}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</BCard.Body>\n\t\t\t\t\t\t\t</BCard>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<BCard style={{ paddingTop: \"10px\" }}>\n\t\t\t\t\t\t<BCard.Body>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t\t\tonClick={handleShowHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate a post\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</BCard.Body>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn <p>Please log in to create a post</p>;\n\t}\n};\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { useHistory } from \"react-router\";\n\nimport \"../style/Nav.css\";\n\ntype NavProps = {\n\tusername: string;\n};\n\nexport const NavBar = (props: NavProps) => {\n\tconst history = useHistory();\n\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"user\");\n\t\thistory.push(\"/home\");\n\t};\n\n\treturn (\n\t\t<Nav variant=\"pills\" activeKey=\"1\" id=\"nav\">\n\t\t\t<a href=\"/home\" className=\"logo\">\n\t\t\t\t<span className=\"logo_m\">micro</span>\n\t\t\t\t<span className=\"logo_b\">blog</span>\n\t\t\t</a>\n\t\t\t<Nav.Item>\n\t\t\t\t<Nav.Link eventKey=\"1\" href=\"/home\">\n\t\t\t\t\tHome\n\t\t\t\t</Nav.Link>\n\t\t\t</Nav.Item>\n\t\t\t{props.username ? (\n\t\t\t\t<>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"3\" href=\"/profile\">\n\t\t\t\t\t\t\t@{props.username}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\teventKey=\"3\"\n\t\t\t\t\t\t\thref=\"/home\"\n\t\t\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"3\" href=\"/login\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t)}\n\t\t</Nav>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport BCard from \"react-bootstrap/Card\";\nimport BForm from \"react-bootstrap/Form\";\nimport BButton from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport { JWT } from \"../types/JWT\";\n\nimport \"../style/Card.css\";\nimport \"../style/Login.css\";\n\nimport { useHistory } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\ntype RegisterProps = {\n\tuser: JWT;\n\tsetUser: Function;\n};\n\nexport const Register = (props: RegisterProps) => {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [password2, setPassword2] = useState(\"\");\n\n\tconst [error, setError] = useState(false);\n\n\tconst history = useHistory();\n\n\tconst { user, setUser } = props;\n\n\tconst handleRegister = (e: any) => {\n\t\te.preventDefault();\n\t\tif (password === password2) {\n\t\t\taxios\n\t\t\t\t.post(\"/api/register\", {\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword,\n\t\t\t\t\tpassword2,\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\taxios\n\t\t\t\t\t\t.post(\"/api/login\", {\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tpassword,\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then((response2) => {\n\t\t\t\t\t\t\tsetUser(response2.data);\n\t\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\t\t\tJSON.stringify(response2.data)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\thistory.push(\"/home\");\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((err) => console.log(err));\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetError(true);\n\t\t}\n\t};\n\n\tif (user) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col></Col>\n\t\t\t\t<Col xs={6}>\n\t\t\t\t\t<BCard>\n\t\t\t\t\t\t<BForm onSubmit={handleRegister}>\n\t\t\t\t\t\t\t{error && (\n\t\t\t\t\t\t\t\t<Alert variant=\"danger\">\n\t\t\t\t\t\t\t\t\tPasswords are not the same.\n\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t\t<BForm.Label>Username</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter username\"\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Confirm password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\n\t\t\t\t\t\t\t\t\tvalue={password2}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword2(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BButton variant=\"primary\" type=\"submit\" block>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</BButton>\n\t\t\t\t\t\t</BForm>\n\t\t\t\t\t\t<BCard.Link href=\"/login\" className=\"registerLink\">\n\t\t\t\t\t\t\tDon't have an account?\n\t\t\t\t\t\t</BCard.Link>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Col>\n\t\t\t\t<Col></Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"./\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport \"../style/Profile.css\";\n\ntype ProfileProps = {};\n\nexport const Profile = (props: ProfileProps) => {\n\tconst [cards, setCards] = useState([]);\n\tconst [postsCount, setPostsCount] = useState(10);\n\tconst [user, setUser] = useState({\n\t\tfollows: [],\n\t\t_id: \"\",\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\tavatar: \"\",\n\t\t__v: 0,\n\t});\n\n\tconst [following, setFollowing] = useState(false);\n\n\tlet { username } = useParams<{ username: string }>();\n\n\tuseEffect(() => {\n\t\taxios.get(\"/api/user/\" + username).then((response) => {\n\t\t\tsetUser(response.data);\n\t\t});\n\n\t\taxios\n\t\t\t.get(\"/api/posts/user/\" + username + \"/\" + postsCount)\n\t\t\t.then((response) => {\n\t\t\t\tsetCards(response.data);\n\t\t\t\tresponse.data.forEach((post: any) => {\n\t\t\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\t\t\tpost.user = temp;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t}, []);\n\n\tconst handleLoad = () => {\n\t\tsetPostsCount(postsCount + 10);\n\t};\n\n\tconst handleFollow = () => {\n\t\tsetFollowing(!following);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron fluid>\n\t\t\t\t<img src={user.avatar} id=\"jumbo_img\" />\n\t\t\t\t<h1 id=\"jumbo_username\">@{user.username}</h1>\n\t\t\t\t<br />\n\t\t\t\t<Button size=\"sm\">{following ? \"Unfollow\" : \"Follow\"}</Button>\n\t\t\t</Jumbotron>\n\t\t\t{cards.map((c: any) => (\n\t\t\t\t<Card\n\t\t\t\t\tid={c.id}\n\t\t\t\t\tusername={c.user}\n\t\t\t\t\ttext={c.content}\n\t\t\t\t\tlikes={c.likes}\n\t\t\t\t\tavatar={c.avatar}\n\t\t\t\t\ttimestamp={c.timestamp}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Button onClick={handleLoad} style={{ marginBottom: \"15px\" }}>\n\t\t\t\tLoad More\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"./\";\nimport { useParams } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\ntype PostDetailProps = {};\n\nexport const PostDetail = (props: PostDetailProps) => {\n\tconst { id } = useParams<{ id: string }>();\n\n\tconst [post, setPost] = useState({\n\t\tlikes: [],\n\t\t_id: \"\",\n\t\tid: \"\",\n\t\tuser: {\n\t\t\tavatar: \"\",\n\t\t\tfollows: [],\n\t\t\tusername: \"\",\n\t\t},\n\t\ttimestamp: \"\",\n\t\tcontent: \"\",\n\t\t__v: 0,\n\t});\n\n\tuseEffect(() => {\n\t\taxios.get(\"/api/posts/get/\" + id).then((response) => {\n\t\t\tlet post = response.data;\n\t\t\tconsole.log(post);\n\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\tpost.user = temp;\n\t\t\t\tsetPost(post);\n\t\t\t});\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Card\n\t\t\tkey={post.id}\n\t\t\tid={post.id}\n\t\t\tusername={post.user.username}\n\t\t\ttext={post.content}\n\t\t\tlikes={post.likes}\n\t\t\tavatar={post.user.avatar}\n\t\t\ttimestamp={post.timestamp}\n\t\t/>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from \"react-router-dom\";\n\nimport Container from \"react-bootstrap/Container\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport {\n\tCardList,\n\tNavBar,\n\tLogin,\n\tHome,\n\tRegister,\n\tProfile,\n\tPostDetail,\n} from \"./components\";\n\nconst App = () => {\n\tconst [user, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst localUser = JSON.parse(localStorage.getItem(\"user\"));\n\t\tif (localUser) {\n\t\t\tsetUser(localUser);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<NavBar username={user ? user.username : \"\"} />\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/home\">\n\t\t\t\t\t\t<Home user={user} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<CardList />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile/:username\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<Profile />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<Login user={user} setUser={setUser} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<Register user={user} setUser={setUser} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/post/:id\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<PostDetail />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t{/* ALWAYS LEAVE `/` LAST */}\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}