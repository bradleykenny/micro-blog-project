{"version":3,"sources":["components/Card.tsx","components/CardList.tsx","components/Home.tsx","components/Login.tsx","components/PostCard.tsx","components/Nav.tsx","components/Register.tsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","useState","liked","setLiked","ts","Date","parse","timestamp","formatDate","dateformat","href","username","alt","src","avatar","className","dangerouslySetInnerHTML","__html","text","onClick","CardList","cards","setCards","postsCount","setPostsCount","useEffect","axios","get","then","response","data","forEach","post","user","res","temp","follows","map","c","content","likes","Button","console","log","style","marginBottom","Home","Container","paddingTop","Row","Col","xs","length","Login","setUsername","password","setPassword","history","useHistory","setUser","to","onSubmit","e","preventDefault","localStorage","setItem","JSON","stringify","push","Group","controlId","Label","Control","type","placeholder","onChange","target","value","variant","PostCard","setContent","showForm","setShowForm","handleShowHide","Body","size","float","marginTop","Form","alert","name","NavBar","Nav","activeKey","id","Item","Link","eventKey","removeItem","Register","password2","setPassword2","response2","catch","err","App","localUser","getItem","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.342b175f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport dateformat from \"dateformat\";\nimport BCard from \"react-bootstrap/Card\";\n\nimport \"../style/Card.css\";\n\ntype CardProps = {\n\tusername: string;\n\ttext: string;\n\tlikes: number;\n\tavatar: string;\n\ttimestamp: string;\n};\n\nexport const Card = (props: CardProps) => {\n\tconst [liked, setLiked] = useState(false);\n\n\tconst handleLiked = () => {\n\t\tsetLiked(!liked);\n\t};\n\n\tconst ts: number = Date.parse(props.timestamp);\n\tconst formatDate: string = dateformat(ts, \"h:MMtt | dS mmm yyyy\");\n\n\treturn (\n\t\t<BCard>\n\t\t\t<a href={\"/profile/\" + props.username}>\n\t\t\t\t<img alt=\"Avatar\" src={props.avatar} />\n\t\t\t</a>\n\t\t\t<div className=\"card_text\">\n\t\t\t\t<a href={\"/profile/\" + props.username}>\n\t\t\t\t\t<h2>@{props.username}</h2>\n\t\t\t\t</a>\n\t\t\t\t<p dangerouslySetInnerHTML={{ __html: props.text }}></p>\n\t\t\t\t<ul>\n\t\t\t\t\t<p onClick={handleLiked}>{liked ? \"Unlike\" : \"Like\"}</p>\n\t\t\t\t\t<p> More</p>\n\t\t\t\t</ul>\n\t\t\t\t<h6>{formatDate}</h6>\n\t\t\t</div>\n\t\t</BCard>\n\t);\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card } from \"./\";\nimport { Button } from \"react-bootstrap\";\n\ntype CardListProps = {};\n\nexport const CardList = (props: CardListProps) => {\n\tconst [cards, setCards] = useState([]);\n\tconst [postsCount, setPostsCount] = useState(10);\n\n\tuseEffect(() => {\n\t\taxios.get(\"/api/posts/\" + postsCount).then((response) => {\n\t\t\tsetCards(response.data);\n\t\t\tresponse.data.forEach((post: any) => {\n\t\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\t\tpost.user = temp;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}, []);\n\n\tconst handleLoad = () => {\n\t\tconsole.log(postsCount);\n\t\taxios.get(\"/api/posts/\" + (postsCount + 10)).then((response) => {\n\t\t\tsetCards(response.data);\n\t\t\tsetPostsCount(postsCount + 10);\n\t\t\tresponse.data.forEach((post: any) => {\n\t\t\t\taxios.get(\"/api/user/\" + post.user).then((res) => {\n\t\t\t\t\tconst { avatar, follows, username } = res.data;\n\t\t\t\t\tconst temp = { avatar, follows, username };\n\n\t\t\t\t\tpost.user = temp;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{cards.map((c: any) => (\n\t\t\t\t<Card\n\t\t\t\t\tusername={c.user}\n\t\t\t\t\ttext={c.content}\n\t\t\t\t\tlikes={0}\n\t\t\t\t\tavatar={c.avatar}\n\t\t\t\t\ttimestamp={c.timestamp}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t<Button onClick={handleLoad} style={{ marginBottom: \"15px\" }}>\n\t\t\t\tLoad More\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n","import React from \"react\";\nimport BCard from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { CardList, PostCard } from \"./\";\nimport { JWT } from \"../types/JWT\";\n\ntype HomeProps = {\n\tuser: JWT;\n};\n\nexport const Home = (props: HomeProps) => {\n\treturn (\n\t\t<div>\n\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={4}>\n\t\t\t\t\t\t{props.user && (\n\t\t\t\t\t\t\t<BCard>\n\t\t\t\t\t\t\t\t<a href={\"/profile/\" + props.user.username}>\n\t\t\t\t\t\t\t\t\t<img src={props.user.avatar} alt=\"Avatar\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<div className=\"card_text\">\n\t\t\t\t\t\t\t\t\t<a href={\"/profile/\" + props.user.username}>\n\t\t\t\t\t\t\t\t\t\t<h2>@{props.user.username}</h2>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t<i>Some information here coming soon</i>\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tFollowers: {props.user.follows.length}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tFollowing: {props.user.follows.length}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</BCard>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={6}>\n\t\t\t\t\t\t{props.user && <PostCard user={props.user} />}\n\t\t\t\t\t\t<CardList />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col></Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport BCard from \"react-bootstrap/Card\";\nimport BForm from \"react-bootstrap/Form\";\nimport BButton from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { JWT } from \"../types/JWT\";\n\nimport \"../style/Card.css\";\nimport { useHistory } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\ntype LoginProps = {\n\tuser: JWT;\n\tsetUser: Function;\n};\n\nexport const Login = (props: LoginProps) => {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst history = useHistory();\n\n\tconst { user, setUser } = props;\n\n\tconst handleLogin = (e: any) => {\n\t\te.preventDefault();\n\t\taxios.post(\"/api/login\", { username, password }).then((response) => {\n\t\t\tsetUser(response.data);\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response.data));\n\t\t\thistory.push(\"/home\");\n\t\t});\n\t};\n\n\tif (user) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col></Col>\n\t\t\t\t<Col xs={6}>\n\t\t\t\t\t<BCard>\n\t\t\t\t\t\t<BForm onSubmit={handleLogin}>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t\t<BForm.Label>Username</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter username\"\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BButton variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</BButton>\n\t\t\t\t\t\t</BForm>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Col>\n\t\t\t\t<Col></Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n\tCard as BCard,\n\tContainer,\n\tRow,\n\tCol,\n\tForm,\n\tButton,\n} from \"react-bootstrap\";\n\nimport { JWT } from \"../types/JWT\";\n\ntype PostCardProps = {\n\tuser: JWT;\n};\n\nexport const PostCard = (props: PostCardProps) => {\n\tconst [content, setContent] = useState(\"\");\n\tconst [showForm, setShowForm] = useState(false);\n\n\tconst handleSubmit = (e: any) => {\n\t\te.preventDefault();\n\t\tif (content.length > 0) {\n\t\t\taxios\n\t\t\t\t.post(\"/api/posts/create\", {\n\t\t\t\t\tuser: props.user.username,\n\t\t\t\t\tcontent: content,\n\t\t\t\t\tlikes: [],\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\talert(\"Content posted!\");\n\t\t\t\t\tsetContent(\"\");\n\t\t\t\t});\n\t\t}\n\t};\n\n\tconst handleChange = (e: any) => {\n\t\te.preventDefault();\n\t\tconst { name, value } = e.target;\n\n\t\tswitch (name) {\n\t\t\tcase \"content\":\n\t\t\t\tsetContent(value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleShowHide = () => {\n\t\tsetShowForm(!showForm);\n\t};\n\n\tif (props.user) {\n\t\tif (showForm) {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<Row className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t<Col className=\"align-items-center\">\n\t\t\t\t\t\t\t<BCard>\n\t\t\t\t\t\t\t\t<BCard.Body>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: \"-5px\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tonClick={handleShowHide}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tHide\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t{/* <BCard.Title className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<h1>Create post</h1>\n\t\t\t\t\t\t\t\t\t</BCard.Title> */}\n\t\t\t\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formUsername\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t\tWhat do you want to say?\n\t\t\t\t\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"content\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Content\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</BCard.Body>\n\t\t\t\t\t\t\t</BCard>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Container>\n\t\t\t\t\t<BCard style={{ paddingTop: \"10px\" }}>\n\t\t\t\t\t\t<BCard.Body>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"btn-block\"\n\t\t\t\t\t\t\t\tonClick={handleShowHide}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate a post\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</BCard.Body>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Container>\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn <p>Please log in to create a post</p>;\n\t}\n};\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { useHistory } from \"react-router\";\n\nimport \"../style/Nav.css\";\n\ntype NavProps = {\n\tusername: string;\n};\n\nexport const NavBar = (props: NavProps) => {\n\tconst history = useHistory();\n\n\tconst handleLogout = () => {\n\t\tlocalStorage.removeItem(\"user\");\n\t\thistory.push(\"/home\");\n\t};\n\n\treturn (\n\t\t<Nav variant=\"pills\" activeKey=\"1\" id=\"nav\">\n\t\t\t<a href=\"/home\" className=\"logo\">\n\t\t\t\t<span className=\"logo_m\">micro</span>\n\t\t\t\t<span className=\"logo_b\">blog</span>\n\t\t\t</a>\n\t\t\t<Nav.Item>\n\t\t\t\t<Nav.Link eventKey=\"1\" href=\"/home\">\n\t\t\t\t\tHome\n\t\t\t\t</Nav.Link>\n\t\t\t</Nav.Item>\n\t\t\t<Nav.Item>\n\t\t\t\t<Nav.Link href=\"/about\">About</Nav.Link>\n\t\t\t</Nav.Item>\n\t\t\t{props.username ? (\n\t\t\t\t<>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link eventKey=\"3\" href=\"/profile\">\n\t\t\t\t\t\t\t@{props.username}\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\teventKey=\"3\"\n\t\t\t\t\t\t\thref=\"/home\"\n\t\t\t\t\t\t\tonClick={handleLogout}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t</Nav.Item>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"3\" href=\"/login\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t)}\n\t\t</Nav>\n\t);\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport BCard from \"react-bootstrap/Card\";\nimport BForm from \"react-bootstrap/Form\";\nimport BButton from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport { JWT } from \"../types/JWT\";\n\nimport \"../style/Card.css\";\nimport { useHistory } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\n\ntype RegisterProps = {\n\tuser: JWT;\n\tsetUser: Function;\n};\n\nexport const Register = (props: RegisterProps) => {\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [password2, setPassword2] = useState(\"\");\n\n\tconst history = useHistory();\n\n\tconst { user, setUser } = props;\n\n\tconst handleRegister = (e: any) => {\n\t\te.preventDefault();\n\t\taxios\n\t\t\t.post(\"/api/register\", {\n\t\t\t\tusername,\n\t\t\t\tpassword,\n\t\t\t\tpassword2,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\taxios\n\t\t\t\t\t.post(\"/api/login\", {\n\t\t\t\t\t\tusername,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t})\n\t\t\t\t\t.then((response2) => {\n\t\t\t\t\t\tsetUser(response2.data);\n\t\t\t\t\t\tlocalStorage.setItem(\n\t\t\t\t\t\t\t\"user\",\n\t\t\t\t\t\t\tJSON.stringify(response2.data)\n\t\t\t\t\t\t);\n\t\t\t\t\t\thistory.push(\"/home\");\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => console.log(err));\n\t\t\t});\n\t};\n\n\tif (user) {\n\t\treturn <Redirect to=\"/home\" />;\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col></Col>\n\t\t\t\t<Col xs={6}>\n\t\t\t\t\t<BCard>\n\t\t\t\t\t\t<BForm onSubmit={handleRegister}>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicEmail\">\n\t\t\t\t\t\t\t\t<BForm.Label>Username</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter username\"\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BForm.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t<BForm.Label>Confirm password</BForm.Label>\n\t\t\t\t\t\t\t\t<BForm.Control\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm password\"\n\t\t\t\t\t\t\t\t\tvalue={password2}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tsetPassword2(e.target.value)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BForm.Group>\n\t\t\t\t\t\t\t<BButton variant=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</BButton>\n\t\t\t\t\t\t</BForm>\n\t\t\t\t\t</BCard>\n\t\t\t\t</Col>\n\t\t\t\t<Col></Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tRedirect,\n} from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Container from \"react-bootstrap/Container\";\nimport { CardList, NavBar, Login, Home, Register } from \"./components\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst App = () => {\n\tconst [user, setUser] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst localUser = JSON.parse(localStorage.getItem(\"user\"));\n\t\tif (localUser) {\n\t\t\tsetUser(localUser);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<NavBar username={user ? user.username : \"\"} />\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/home\">\n\t\t\t\t\t\t<Home user={user} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<CardList />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<CardList />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<Login user={user} setUser={setUser} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/register\">\n\t\t\t\t\t\t<Container style={{ paddingTop: \"100px\" }}>\n\t\t\t\t\t\t\t<Register user={user} setUser={setUser} />\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t{/* ALWAYS LEAVE `/` LAST */}\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}